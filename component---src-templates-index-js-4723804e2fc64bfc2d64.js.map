{"version":3,"file":"component---src-templates-index-js-4723804e2fc64bfc2d64.js","mappings":"kLAUMA,EAAgB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACrBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,YAAaC,EAChCH,EADgCG,YAAaC,EAC7CJ,EAD6CI,aAAcC,EAC3DL,EAD2DK,aAGrDC,EAAUP,EAAKQ,kBAAfD,MAER,OACE,UAAC,IAAD,WACGL,EAAc,IACb,SAAC,IAAD,CAAQO,MAAK,wBAA0BP,KAGzC,yBACGK,EAAMG,KACL,oBACEC,KACEC,YAAeC,EAFnB,EAEmBA,KAAMJ,EAFzB,EAEyBA,MAAOK,EAFhC,EAEgCA,KAFhC,OAKE,iBAAKC,UAAU,QAAf,WACE,eAAIA,UAAU,qCAAd,UACE,SAAC,EAAAC,KAAD,CAAMC,GAAIJ,EAAV,SAAiBJ,OAGnB,cAAGM,UAAU,6BAAb,SAA2CD,MALjBD,SAWlC,iBAAKE,UAAU,gDAAf,UACGZ,IACC,SAAC,EAAAa,KAAD,CACEC,GAAIX,EACJS,UAAU,gHAFZ,oBAOAZ,IACA,iBAAMY,UAAU,4FAAhB,mBAIDX,IACC,SAAC,EAAAY,KAAD,CACEC,GAAIZ,EACJU,UAAU,4FAFZ,oBAOAX,IACA,iBAAMW,UAAU,wEAAhB,0BA6CVhB,EAAcmB,aAAe,CAC3BlB,KAAM,GACNC,YAAa,IAGf","sources":["webpack://ioannispoulakas.com/./src/templates/index.js"],"sourcesContent":["/**\n * @file Post template.\n */\n\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\n\nimport Layout from '../components/Layout';\n\nconst IndexTemplate = ({ data, pageContext }) => {\n  const { currentPage, hasNextPage, hasPrevPage, prevPagePath, nextPagePath } =\n    pageContext;\n\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <Layout>\n      {currentPage > 1 && (\n        <Helmet title={`Posts Archive - Page ${currentPage}`} />\n      )}\n\n      <div>\n        {edges.map(\n          ({\n            node: {\n              frontmatter: { path, title, date },\n            },\n          }) => (\n            <div className=\"mb-12\" key={path}>\n              <h1 className=\"text-theme-blue text-4xl font-bold\">\n                <Link to={path}>{title}</Link>\n              </h1>\n\n              <p className=\"mt-2 text-xl text-gray-400\">{date}</p>\n            </div>\n          ),\n        )}\n      </div>\n\n      <div className=\"mt-16 mb-24 sm:mb-16 flex text-center text-xl\">\n        {hasNextPage && (\n          <Link\n            to={nextPagePath}\n            className=\"w-6/12 p-3 border-t border-b border-l rounded-tl rounded-bl border-gray-200 text-theme-blue hover:bg-gray-100\"\n          >\n            Older\n          </Link>\n        )}\n        {!hasNextPage && (\n          <span className=\"w-6/12 p-3 border-t border-b border-l rounded-tl rounder-bl border-gray-200 text-gray-400\">\n            Older\n          </span>\n        )}\n        {hasPrevPage && (\n          <Link\n            to={prevPagePath}\n            className=\"w-6/12 p-3 border border-gray-200 rounded-tr rounded-br text-theme-blue hover:bg-gray-100\"\n          >\n            Newer\n          </Link>\n        )}\n        {!hasPrevPage && (\n          <span className=\"w-6/12 p-3 border border-gray-200 rounded-tr rounded-br text-gray-400\">\n            Newer\n          </span>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexTemplate($postsLimit: Int!, $postsOffset: Int!) {\n    allMarkdownRemark(\n      limit: $postsLimit\n      skip: $postsOffset\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            date(formatString: \"DD MMM YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n\nIndexTemplate.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object),\n    }),\n  }),\n  pageContext: PropTypes.shape({\n    currentPage: PropTypes.number,\n    hasNextPage: PropTypes.bool,\n    hasPrevPage: PropTypes.bool,\n    prevPagePath: PropTypes.string,\n    nextPagePath: PropTypes.string,\n  }),\n};\n\nIndexTemplate.defaultProps = {\n  data: {},\n  pageContext: {},\n};\n\nexport default IndexTemplate;\n"],"names":["IndexTemplate","data","pageContext","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","edges","allMarkdownRemark","title","map","node","frontmatter","path","date","className","Link","to","defaultProps"],"sourceRoot":""}