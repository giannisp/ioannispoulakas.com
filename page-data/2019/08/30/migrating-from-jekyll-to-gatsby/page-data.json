{"componentChunkName":"component---src-templates-post-js","path":"/2019/08/30/migrating-from-jekyll-to-gatsby/","result":{"data":{"markdownRemark":{"html":"<p>I have been following <a href=\"https://gatsbyjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a> for quite some time now, and I finally decided to give it a try on my personal website/blog! This post describes the journey of migrating from Jekyll to Gatsby.</p>\n<h2>Why Gatsby</h2>\n<p>Gatsby is an awesome open source framework for building blazing fast static websites and apps. What I find most intriguing about Gatsby is that it is powered by technologies that I use on my everyday dev life: JS, React and GraphQL.</p>\n<p>Gatsby is also backed by a vibrant community, providing open source plugins that aid on accomplishing common tasks in an easy manner.</p>\n<h2>Migration planning</h2>\n<p>My plan for the Jekyll to Gatsby migration was pretty straight-forward, keep\nthe content markdown structure, as well as preserve the CSS layout.</p>\n<p>Gatsby shines on both aspects:</p>\n<ul>\n<li>It fully supports automated markdown to HTML content format.</li>\n<li>It supports importing existing CSS files, and customizing components via CSS-in-JS.</li>\n</ul>\n<p>Thus the main migration challenge was setting up Gatsby, and migrating the layout from the Jekyll template format to JSX.</p>\n<p>Gatsby offers various project starter templates, and I have selected the most minimal one, which fits my principal of learning a new framework by building a new project from scratch.</p>\n<p>My WordPress/Jekyll background has also driven me to separate content into two main categories, pages and blog posts, with different templates.</p>\n<h3>Steps and resources for setting up Gatsby</h3>\n<p>Gatsby developers provide excellent <a href=\"https://www.gatsbyjs.org/docs/\" target=\"_blank\" rel=\"noopener noreferrer\">documentation</a> for getting started, so I am not going to list detailed steps for installing and using the gatsby-cli.</p>\n<ul>\n<li>Create a new Gatsby project using the <a href=\"https://www.gatsbyjs.org/starters/gatsbyjs/gatsby-starter-default/\" target=\"_blank\" rel=\"noopener noreferrer\">gatsby-starter-default</a> template.</li>\n<li>Setup <code>siteMetadata</code> and <code>gatsby-plugin-manifest</code> data on <code>gatsby-config</code>.</li>\n<li>Customize the React components to achieve the desired site layout.</li>\n<li>Setup <a href=\"https://www.gatsbyjs.org/packages/gatsby-source-filesystem/\" target=\"_blank\" rel=\"noopener noreferrer\">gatsby-source-filesystem</a> for markdown content.</li>\n<li>Setup page/post markdown meta. I am using the following variables: template (page or post), path, title, date (for posts only).</li>\n<li>Study documentation, <a href=\"https://www.gatsbyjs.org/starters/gatsbyjs/gatsby-starter-blog/\" target=\"_blank\" rel=\"noopener noreferrer\">gatsby-starter-blog</a> and <a href=\"https://www.gatsbyjs.org/starters/alxshelepenok/gatsby-starter-lumen/\" target=\"_blank\" rel=\"noopener noreferrer\">gatsby-starter-lumen</a> starters on how to implement page/post templates, as well as posts pagination. Apply related concepts on <code>gatsby-node</code> file and create templates.</li>\n<li>Add custom 404 page.</li>\n<li>Setup HTML title, meta per content template, using <code>react-helmet</code>.</li>\n<li>Add <code>favicon.ico</code> on the <code>static</code> Gatsby folder.</li>\n</ul>\n<h3>Essential Gatsby plugins</h3>\n<ul>\n<li><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-feed/\" target=\"_blank\" rel=\"noopener noreferrer\">gatsby-plugin-feed</a>: Add an RSS feed.</li>\n<li><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-sitemap/\" target=\"_blank\" rel=\"noopener noreferrer\">gatsby-plugin-sitemap</a>: Add an XML sitemap.</li>\n<li><a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-google-analytics/\" target=\"_blank\" rel=\"noopener noreferrer\">gatsby-plugin-google-analytics</a>: Add Google Analytics support. Tracking code only runs in production mode, which is great as local development won't ruin stats.</li>\n<li><a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-external-links/\" target=\"_blank\" rel=\"noopener noreferrer\">gatsby-remark-external-links</a>: Customize markdown links, allow opening the target url in a new window/tab.</li>\n</ul>\n<h3>Optionally customize Prettier, ESLint, Babel configurations</h3>\n<p>Default configurations are pretty sane, but they can be customized to fit your personal preference.</p>\n<ul>\n<li>Prettier: Customize <code>.prettierrc</code> and <code>.prettierignore</code> files.</li>\n<li>ESLint: Use <a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-eslint/\" target=\"_blank\" rel=\"noopener noreferrer\">gatsby-plugin-eslint</a> and a custom <code>.eslintrc</code> to configure your ESLint setup. I prefer <code>eslint-config-airbnb</code> and a tight eslint/prettier configuration, failing compilation on errors.</li>\n<li>Babel: Add a custom <code>.babelrc</code> file that extends from <a href=\"https://www.npmjs.com/package/babel-preset-gatsby\" target=\"_blank\" rel=\"noopener noreferrer\">babel-preset-gatsby</a>. For example you can add optional-chaining support or any other Babel plugin.</li>\n</ul>\n<h3>Deploying to GitHub Pages using a custom domain</h3>\n<ul>\n<li>Add the CNAME file both on repo root and on the <code>static</code> Gatsby folder so that it can get deployed to the special <code>gh-pages</code> branch.</li>\n<li>Install <code>gh-pages</code> from npm.</li>\n<li>Add a <code>deploy</code> command on <code>package.json</code> as follows:<br>\n<code>gatsby build &#x26;&#x26; gh-pages -d public</code></li>\n<li>Setup GitHub Pages on repository settings to be deploying from the <code>gh-pages</code> branch. Keep the <code>master</code> branch clean, for source code purposes only.</li>\n<li><code>npm run deploy</code></li>\n</ul>\n<h3>Gatsby pitfalls</h3>\n<p>I didn't come across any major pitfall, other than the slight annoyance of sometimes having to clear the <code>.cache</code> folder and restart the development server.</p>\n<h3>Conclusion</h3>\n<p>I really enjoyed the process of migrating to Gatsby. Step-by-step building the website from scratch, selecting the appropriate plugins, customizing code. Everything falling within the NodeJS and React ecosystem.<br>\nOverall I would highly recommend Gatsby, and of course I am looking forward to using it again on new projects.<br>\nFeel free to browse the updated <a href=\"https://github.com/giannisp/ioannispoulakas.com\" target=\"_blank\" rel=\"noopener noreferrer\">source code</a> and get inspired.</p>","frontmatter":{"title":"Migrating from Jekyll to Gatsby","date":"30 Aug 2019"}}},"pageContext":{}},"staticQueryHashes":["2875828811"],"slicesMap":{}}